<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialise variables

// State Control Variables
isMenu = false;
doorActive = false;
regenerateLevel = false;
regenerateCount = 0;
levelWin = false;
returnToTitle = false;

fliesEaten = 0;

// Generate random number
randomize();

// Level Creation Variables
//birthLimit = round(random(8)) ; // If an empty cell has more than this number of neighbours it'll become rock
//deathLimit = round(random(8)); // If a rock has less than this number of neighbours it'll become empty
//rockChance = random(0.6) + 0.1;
//flyChance = random(0.001);
//numSteps = round(random(7)) + 1; 

birthLimit = 4 ; // If an empty cell has more than this number of neighbours it'll become rock
deathLimit = 5; // If a rock has less than this number of neighbours it'll become empty
rockChance = 0.35;
flyChance = 0.005;
numSteps = 6;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create LevelController
level = instance_create(0, 0, LevelController);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>returnToTitle = false;
room_goto(rm_title);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Win Condition
if ( levelWin == true ) {
    alarm[0] = 300;
    levelWin = false;
    returnToTitle = true;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy level if needs to be regenerated
if ( regenerateLevel == true ) { 
    if instance_exists(obj_frog) {
        with (obj_frog) {
            instance_destroy();
        }
    }
    if instance_exists(obj_rock) {
        with (obj_rock) {
            instance_destroy();
        }
    }
    if instance_exists(obj_collision) {
        with (obj_collision) {
            instance_destroy();
        }
    }
    if instance_exists(obj_door) {
        with (obj_door) {
            instance_destroy();
        }
    }
    if instance_exists(ViewController) {
        with (ViewController) {
            instance_destroy();
        }
    }
    if instance_exists(LevelController) {
        with (LevelController) {
            instance_destroy();
        }
    }
    regenerateLevel = false;
    regenerateCount += 1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Recreate LevelController if destroyed
// Randomise parameters if level has failed to initialise 5 times
if ( regenerateCount &gt;= 5 ) {
    //birthLimit = round(random(8)) ; // If an empty cell has more than this number of neighbours it'll become rock
    //deathLimit = round(random(8)); // If a rock has less than this number of neighbours it'll become empty
    //rockChance = random(0.6) + 0.1;
    //flyChance = random(0.001);
    //numSteps = round(random(7)) + 1; 

    birthLimit = 4 ; // If an empty cell has more than this number of neighbours it'll become rock
    deathLimit = 3; // If a rock has less than this number of neighbours it'll become empty
    rockChance = 0.35;
    flyChance = 0.005;
    numSteps = 6;
    regenerateCount = 0;
}

if ( !instance_exists(LevelController) ) {
    instance_create(0, 0, LevelController);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Show debug level creation values
//draw_text(20, 20, "birthLimit = " + string(birthLimit));
//draw_text(20, 40, "deathLimit = " + string(deathLimit));
//draw_text(20, 60, "rockChance (%) = " + string(rockChance * 100));
//draw_text(20, 80, "flyChance (%) = " + string(flyChance * 100));
//draw_text(20, 100, "numSteps = " + string(numSteps));

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Show Congratulations
if ( returnToTitle == true ) {
    draw_text(view_wport / 2 - 100, view_hport / 2 - 30, "Congratulations");   
    draw_text(view_wport / 2 - 135, view_hport / 2 - 5, "on escaping the depths!");   
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Show Fly Score Counter
draw_sprite_ext(spr_fly, 0, view_wport - 50, 40, 3, 3, direction, image_blend, image_alpha);
draw_text(view_wport - 30, 30, string(fliesEaten));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
